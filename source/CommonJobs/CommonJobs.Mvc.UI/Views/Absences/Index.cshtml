@{
    ViewBag.Title = "Ausencias · CommonJobs";
    ScriptManager.RegisterCss(Url.Content("~/Content/ie.css"), priority: 500, htmlAttributes: new { media = "screen" }, patchCondition: "lte IE 9");
    ScriptManager.RegisterCss(Url.Content("~/Content/1140.css"), priority: 500, htmlAttributes: new { media = "screen" });
    ScriptManager.RegisterCss(Url.Content("~/Content/reset.css"), priority: 500);
    ScriptManager.RegisterJs(Url.Content("~/Scripts/DataTables/jquery.dataTables.js"));
    ScriptManager.RegisterJs(Url.Content("~/CJLogic/CJLogic.js"));
    ScriptManager.RegisterJs(Url.Content("~/Content/DataTablesHelpers/DataTablesHelpers.js"));
    ScriptManager.RegisterCss(Url.Content("~/Content/Absences/Absences.less"));
    ScriptManager.RegisterJs(Url.Content("~/Content/Absences/Absences.js"));
    ScriptManager.RegisterJs(Url.Content("~/Scripts/MarkdownDeepLib.min.js"));
    ScriptManager.RegisterCss(Url.Content("~/Content/DataTables/css/jquery.dataTables.css"));
    ScriptManager.RegisterJs(Url.Content("~/Content/TableTools-2.1.4/media/js/ZeroClipboard.js"));
    ScriptManager.RegisterJs(Url.Content("~/Content/TableTools-2.1.4/media/js/TableTools.js"));
    ScriptManager.RegisterCss(Url.Content("~/Content/TableTools-2.1.4/media/css/TableTools.css"));
    ScriptManager.RegisterJs(Url.Content("~/Scripts/AjaxHelper.js"));
    ScriptManager.RegisterJs(Url.Content("~/Scripts/DataTables/dataTables.bootstrap.js"));
    ScriptManager.RegisterGlobalJavascript("TableTools.DEFAULTS.sSwfPath", Url.Content("~/Content/TableTools-2.1.4/media/swf/copy_csv_xls_pdf.swf"));

    var year = (int)ViewBag.Year;
    var monthsAndDays = GetDays(year)
        .Select((x, idx) => new 
        { 
            Month = x.Month,
            Day = x.Day.ToString("00"), 
            Weekend = x.DayOfWeek == DayOfWeek.Saturday || x.DayOfWeek == DayOfWeek.Sunday
        })
        .ToLookup(x => x.Month);
        
}

@functions 
{
    IEnumerable<DateTime> GetDays(int year)
    {
        var date = new DateTime(year, 1, 1);
        while (date.Year == year)
        {
            yield return date;
            date = date.AddDays(1);
        }
    }
}

<style>
    @foreach (CommonJobs.Application.EmployeeAbsences.AbsencesReasonResult reason in ViewBag.Reasons)
    {
        var color = reason.Color ?? "#D2DCCE";
        @string.Format(@"
.cell-day.{0}, 
td.cell-day.absence.Full.{0} 
{{ 
    background-color: {1}; 
}}
td.cell-day.absence.Partial.{0} 
{{ 
    background-color: {1}; 
    background-image: -webkit-linear-gradient(250deg, #FFFFFF 25%, {1} 65%);
    background-image: linear-gradient(200deg, #FFFFFF 25%, {1} 65%);
}}
td.cell-day.absence.RemoteWork.{0} 
{{ 
    background-color: {1}; 
    background-image: -webkit-linear-gradient(right bottom, #FFF 40%, {1}, #FFF 60%);
    background-image: linear-gradient(to right bottom, #FFF 40%, {1}, #FFF 60%);
}}
", reason.Slug, color)
    }
</style>

@* Link to previous, next year? *@

@helper YearSelector(int year)
{
    <div class="btn-group year-selection-group">
        <a class="btn btn-mini year-nav" title="Ver ausencias del año @(year - 1)" href="@Url.Action("Index", new { year = year - 1 })">&larr; @(year - 1)</a>
        <button class="btn btn-mini disabled .btn-block year-current" type="button">Año @year</button>
        <a class="btn btn-mini year-nav" title="Ver ausencias del año @(year + 1)" href="@Url.Action("Index", new { year = year + 1 })">@(year + 1) &rarr;</a>
    </div>
}

<div class="bootstrap-scope">
    <table id="absences-table" cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover table-condensed">
    <thead>
        <tr class="months">
            <th class="center">@YearSelector(year)</th>
            @foreach (var x in monthsAndDays)
            {
                <th colspan="@x.Count()" class="center month"></th>
            } 
        </tr>
        <tr>
            <th class="cell-name">Nombre</th>
            @* Other columns with related abscence date, like employee summary, or something *@
            @foreach (var x in monthsAndDays)
            {
                foreach (var d in x)
                {
                    <th class=@("cell-day" + (d.Weekend ? " weekend" : ""))>@d.Day</th>
                }
            } 
        </tr>
    </thead>
    <tbody>
    </tbody>
    <tfoot>
        <tr>
            <th class="cell-name"></th>
            @* Other columns with related abscence date, like employee summary, or something *@
            @foreach (var x in monthsAndDays)
            {
                foreach (var d in x)
                {
                    <th class=@("cell-day" + (d.Weekend ? " weekend" : ""))>@d.Day</th>
                }
            } 
        </tr>
        <tr class="months">
            <th class="center">@YearSelector(year)</th>
            @foreach (var x in monthsAndDays)
            {
                <th colspan="@x.Count()" class="center month" data-month="@x.Key"></th>
            } 
        </tr>
    </tfoot>
    </table>
</div>
@{
    ViewBag.Title = "Edit";
    ScriptManager.RegisterCss(Url.Content("~/Scripts/mdd_styles.css"));
    ScriptManager.RegisterCss(Url.Content("~/Content/JobSearches/EditJobSearch.less"));
    ScriptManager.RegisterJs(Url.Content("~/Scripts/MarkdownDeepLib.min.js"));
    ScriptManager.RegisterJs(Url.Content("~/Scripts/nervoustissue.js"));
    ScriptManager.RegisterJs(Url.Content("~/Content/JobSearches/EditJobSearch.js"));
}

<div id="EditApp" class="bootstrap-scope">
    <div class="editing-bar form-actions">
        <div class="back-link">
            @Html.ActionLink("« Volver al listado principal", "Index")
        </div>
        <div class="references">
            <h3>Ayuda</h3>
            <ul>
                <li>Hacer click en un <span class="reference-editable-field">campo subrayado</span> para editarlo.</li>
                <li>Hacer click en <em><i class="icon-ok"></i> Guardar cambios</em> luego de aceptar los cambios para guardarlos.</li>
            </ul>
        </div>
        <div class="change-management-options">
            <h3>Cambios</h3>
            <p>
                <button class="saveJobSearch btn btn-primary"><i class="icon-ok icon-white"></i> Guardar cambios</button>
                <button class="reloadJobSearch btn">Descartar cambios</button>
                <button class="deleteJobSearch btn pull-right btn-danger"><i class="icon-remove icon-white"></i> Eliminar búsqueda</button>
            </p>
        </div>
    </div>
    
    <h1 class="editable-field title" data-bind="Title"></h1>
    
    <div class="editable-field isPublic" data-bind="IsPublic"></div>
    <div class="editable-field publicCode" data-bind="PublicCode"></div>

    <h2>Notas públicas</h2>
    <div class="editable-field" data-bind="PublicNotes"></div>

    <h2>Información privada</h2>
    <h3>Conocimientos técnicos requeridos</h3>
    <div class="editable-field" data-bind="RequiredTechnicalSkills"></div>

    <h3>Notas</h3>
    <div class="editable-field" data-bind="PrivateNotes"></div>

    <h2>Postulantes sugeridos</h2>
    <div class="suggestedApplicants bootstrap-scope"></div>
</div>

<script id="suggested-applicants-tmpl" type="text/template">
    <% if (!applicants || !applicants.length) { %>
        <p class="no-applicants-notice">No hay ningún postulante que cumpla con los requisitos mínimos para esta búsqueda.</p>
    <% } else { %>
        <table class="table table-condensed table-hover">
            <thead>
                <tr>
                    <th class="name-title">Postulante</th>
                    <% _.each(applicantSkills, function(skill) { %>
                        <th class="skill-header <%= skill.IsRequired ? "required" : "" %>"><%= skill.Name %></th>
                    <% }); %>
                </tr>
            </thead>
            <tbody>
                <% _.each(applicants, function(applicant) {
                       var applicantUrl = urlGenerator.action("Edit", "Applicants", applicant.Id);
                %>
                    <tr>
                        <th><a href="<%= applicantUrl %>" target="_blank"><%= applicant.LastName %>, <%= applicant.FirstName %></a></th>
                        <%
                            _.each(applicantSkills, function(skill) {
                                var currentSkill = _.find(applicant.TechnicalSkills, function (ats) {
                                    return ats.Name == skill.Name;
                                });
                        %>
                            <td class="applicant-skill-level-<%= !!currentSkill ? currentSkill.Level : "" %>">
                                <div class="level-indicator">&nbsp;</div>
                            </td>
                        <% }); %>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    <% } %>
</script>
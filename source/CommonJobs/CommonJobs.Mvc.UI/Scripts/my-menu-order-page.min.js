var __extends = this.__extends || function (e, t) { function o() { this.constructor = e } o.prototype = t.prototype, e.prototype = new o }, MyMenu; !function (e) { $(document).ready(function () { var e = new t(window.ViewData); e.bind() }); var t = function (e) { function t(t) { e.call(this), this.onAjaxCall = !1, this.orderDate = moment(), this.isToday = !1, this.isOrdered = !1, this.hasTomorrowBeenOrdered = !1, this.isProcessButtonVisible = ko.observable(!1); var o = t.order; this.isOrdered = o.IsOrdered, this.hasTomorrowBeenOrdered = o.HasTomorrowBeenOrdered, this.orderDate = moment(o.Date), this.isToday = o.Date == t.now, this.placeSummaries = _.sortBy(_.map(o.PlacesByKey, function (e, t) { return { placeKey: t, placeName: e, optionSummaries: _.map(o.OptionsByKey, function (e, s) { return { optionKey: s, optionName: e, food: o.FoodsByOption[s], quantity: o.QuantityByOptionByPlace[t] && o.QuantityByOptionByPlace[t][s] || 0 } }) } }), "placeKey"), this.detail = _.sortBy(_.map(o.DetailByUserName, function (e, s) { return { userName: s, url: t.baseLink + "/" + s, employeeName: e.EmployeeName, placeKey: e.PlaceKey, placeName: e.PlaceKey && o.PlacesByKey[e.PlaceKey] || " - ", optionKey: e.OptionKey, optionName: e.OptionKey && o.OptionsByKey[e.OptionKey] || " - ", food: e.PlaceKey && e.OptionKey && o.FoodsByOption[e.OptionKey] || "No come aquí", comment: e.Comment || " - " } }), "employeeName") } return __extends(t, e), t.prototype.toggleProcessButton = function () { this.isProcessButtonVisible(!this.isProcessButtonVisible()) }, t.prototype.bind = function () { ko.applyBindings(this); var e = $("table.table-detail"); e.dataTable({ bPaginate: !1, sDom: "<'row-fluid'<'span6'T><'span6'f>r>t<'row-fluid'<'span6'i><'span6'p>>", bInfo: !1, oLanguage: { sEmptyTable: "No hay datos disponibles", sInfo: "Mostrando desde _START_ hasta _END_ de _TOTAL_ registros", sInfoEmpty: "Mostrando desde 0 hasta 0 de 0 registros", sInfoFiltered: "(filtrado de _MAX_ registros en total)", sInfoPostFix: "", sInfoThousands: ",", sLengthMenu: "Mostrar _MENU_ registros", sLoadingRecords: "Cargando...", sProcessing: "Procesando...", sSearch: "Buscar:", sZeroRecords: "No se encontraron resultados", oPaginate: { sFirst: "Primero", sLast: "Último", sNext: "Siguiente", sPrevious: "Anterior" }, oAria: { sSortAscending: ": activar para Ordenar Ascendentemente", sSortDescending: ": activar para Ordendar Descendentemente" } }, oTableTools: { aButtons: [{ sExtends: "print", sButtonText: "Imprimir" }, { sExtends: "copy", sButtonText: "Copiar" }, { sExtends: "pdf", sButtonText: "PDF" }, { sExtends: "csv", sButtonText: "Excel" }] } }) }, t.prototype.refresh = function () { location.reload() }, t }(Utilities.HasCallbacks); e.OrderPage = t }(MyMenu || (MyMenu = {}));
